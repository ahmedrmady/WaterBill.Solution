// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WaterBill.DAL.Data.Entities;

#nullable disable

namespace WaterBill.DAL.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("WaterBill.DAL.Data.Entities.Invoice", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("NWC_Invoices_No")
                        .IsFixedLength();

                    b.Property<int>("AmountConsumption")
                        .HasColumnType("int")
                        .HasColumnName("NWC_Invoices_Amount_Consumption");

                    b.Property<decimal>("ConsumptionValue")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("NWC_Invoices_Consumption_Value");

                    b.Property<int>("CurrentConsumptionAmount")
                        .HasColumnType("int")
                        .HasColumnName("NWC_Invoices_Current_Consumption_Amount");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date")
                        .HasColumnName("NWC_Invoices_Date");

                    b.Property<DateTime>("From")
                        .HasColumnType("date")
                        .HasColumnName("NWC_Invoices_From");

                    b.Property<bool>("IsThereSanitation")
                        .HasColumnType("bit")
                        .HasColumnName("NWC_Invoices_Is_There_Sanitation");

                    b.Property<int>("PreviousConsumptionAmount")
                        .HasColumnType("int")
                        .HasColumnName("NWC_Invoices_Previous_Consumption_Amount");

                    b.Property<string>("Reasons")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("NWC_Invoices_Total_Reasons");

                    b.Property<string>("RrealEstateTypeCode")
                        .IsRequired()
                        .HasColumnType("char(1)")
                        .HasColumnName("NWC_Invoices_Rreal_Estate_Types");

                    b.Property<decimal>("ServiceFee")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("NWC_Invoices_Service_Fee");

                    b.Property<string>("SubscriberId")
                        .IsRequired()
                        .HasColumnType("char(10)")
                        .HasColumnName("NWC_Invoices_Subscriber_No");

                    b.Property<string>("SubscriptionId")
                        .IsRequired()
                        .HasColumnType("char(10)")
                        .HasColumnName("NWC_Invoices_Subscription_No");

                    b.Property<decimal>("TaxRate")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("NWC_Invoices_Tax_Rate");

                    b.Property<decimal>("TaxValue")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("NWC_Invoices_Tax_Value");

                    b.Property<DateTime>("To")
                        .HasColumnType("date")
                        .HasColumnName("NWC_Invoices_To");

                    b.Property<decimal>("TotalBill")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("NWC_Invoices_Total_Bill");

                    b.Property<decimal>("TotalInvoice")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("NWC_Invoices_Total_Invoice");

                    b.Property<decimal>("WastewaterConsumptionValue")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("NWC_Invoices_Wastewater_Consumption_Value");

                    b.Property<string>("Year")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("NWC_Invoices_Year")
                        .IsFixedLength();

                    b.HasKey("Id");

                    b.HasIndex("RrealEstateTypeCode");

                    b.HasIndex("SubscriberId");

                    b.HasIndex("SubscriptionId");

                    b.ToTable("NWC_Invoices", (string)null);
                });

            modelBuilder.Entity("WaterBill.DAL.Data.Entities.RrealEstateType", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("NWC_Rreal_Estate_Types_Code")
                        .IsFixedLength();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("NWC_Rreal_Estate_Types_Name");

                    b.Property<string>("Reasons")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("NWC_Rreal_Estate_Types_Reasons");

                    b.HasKey("Code");

                    b.ToTable("NWC_Rreal_Estate_Types", (string)null);
                });

            modelBuilder.Entity("WaterBill.DAL.Data.Entities.SliceValue", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("NWC_Default_Slice_Values_Code")
                        .IsFixedLength();

                    b.Property<int>("Condition")
                        .HasColumnType("int")
                        .HasColumnName("NWC_Default_Slice_Values_Condtion");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NWC_Default_Slice_Values_Name");

                    b.Property<string>("Reasons")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("NWC_Default_Slice_Values_Reasons");

                    b.Property<decimal>("SanitationPrice")
                        .HasColumnType("decimal(6,2)")
                        .HasColumnName("NWC_Default_Slice_Values_Sanitation_Price");

                    b.Property<decimal>("WaterPrice")
                        .HasColumnType("decimal(6,2)")
                        .HasColumnName("NWC_Default_Slice_Values_Water_Price");

                    b.HasKey("Code");

                    b.ToTable("NWC_Default_Slice_Values", (string)null);
                });

            modelBuilder.Entity("WaterBill.DAL.Data.Entities.Subscriber", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("NWC_Subscriber_File_Id")
                        .IsFixedLength();

                    b.Property<string>("Area")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NWC_Subscriber_File_Area");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NWC_Subscriber_File_City");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("NWC_Subscriber_File_Mobile");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("NWC_Subscriber_File_Name");

                    b.Property<string>("Reasons")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("NWC_Subscriber_File_Reasons");

                    b.HasKey("Id");

                    b.ToTable("NWC_Subscriber_File", (string)null);
                });

            modelBuilder.Entity("WaterBill.DAL.Data.Entities.Subscription", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("NWC_Subscriber_File_Id")
                        .IsFixedLength();

                    b.Property<bool>("IsThereSanitation")
                        .HasColumnType("bit")
                        .HasColumnName("NWC_Subscription_File_Is_There_Sanitation");

                    b.Property<int>("LastReadingMeter")
                        .HasColumnType("int")
                        .HasColumnName("NWC_Subscription_File_Last_Reading_Meter");

                    b.Property<string>("Reasons")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("NWC_Subscription_File_Reasons");

                    b.Property<string>("RrealEstateTypesCode")
                        .IsRequired()
                        .HasColumnType("char(1)")
                        .HasColumnName("NWC_Subscription_File_Rreal_Estate_Types_Code");

                    b.Property<string>("SubscriberCode")
                        .IsRequired()
                        .HasColumnType("char(10)")
                        .HasColumnName("NWC_Subscription_File_Subscriber_Code");

                    b.Property<int>("UnitNo")
                        .HasColumnType("int")
                        .HasColumnName("NWC_Subscription_File_Unit_No");

                    b.HasKey("Id");

                    b.HasIndex("RrealEstateTypesCode");

                    b.HasIndex("SubscriberCode");

                    b.ToTable("NWC_Subscription_File", (string)null);
                });

            modelBuilder.Entity("WaterBill.DAL.Data.Entities.Invoice", b =>
                {
                    b.HasOne("WaterBill.DAL.Data.Entities.RrealEstateType", "RrealEstateType")
                        .WithMany()
                        .HasForeignKey("RrealEstateTypeCode")
                        .IsRequired();

                    b.HasOne("WaterBill.DAL.Data.Entities.Subscriber", "Subscriber")
                        .WithMany()
                        .HasForeignKey("SubscriberId")
                        .IsRequired();

                    b.HasOne("WaterBill.DAL.Data.Entities.Subscription", "Subscription")
                        .WithMany()
                        .HasForeignKey("SubscriptionId")
                        .IsRequired();

                    b.Navigation("RrealEstateType");

                    b.Navigation("Subscriber");

                    b.Navigation("Subscription");
                });

            modelBuilder.Entity("WaterBill.DAL.Data.Entities.Subscription", b =>
                {
                    b.HasOne("WaterBill.DAL.Data.Entities.RrealEstateType", "RrealEstateType")
                        .WithMany("SubscriptionFiles")
                        .HasForeignKey("RrealEstateTypesCode")
                        .IsRequired()
                        .HasConstraintName("FK_NWC_Subscription_File_NWC_Rreal_Estate_Types");

                    b.HasOne("WaterBill.DAL.Data.Entities.Subscriber", "Subscriber")
                        .WithMany("SubscriptionFiles")
                        .HasForeignKey("SubscriberCode")
                        .IsRequired()
                        .HasConstraintName("FK_NWC_Subscription_File_NWC_Subscriber_File");

                    b.Navigation("RrealEstateType");

                    b.Navigation("Subscriber");
                });

            modelBuilder.Entity("WaterBill.DAL.Data.Entities.RrealEstateType", b =>
                {
                    b.Navigation("SubscriptionFiles");
                });

            modelBuilder.Entity("WaterBill.DAL.Data.Entities.Subscriber", b =>
                {
                    b.Navigation("SubscriptionFiles");
                });
#pragma warning restore 612, 618
        }
    }
}
